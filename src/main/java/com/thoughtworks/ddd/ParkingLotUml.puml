@startuml
class ParkingLot <<Entity>> {
  int id
  List<Receipt> receipts
  Map<String, Car> cars
  int capacity

  Receipt parkCar(Car car)
  Car getCar(Receipt receipt)
  Boolean isFull()
  Long getFree()
}
class Car <<Value Object>> {
  String plateNumber
}
class Receipt <<Value Object>> {
  String plateNumber
  String token
  String parkingTime
}

class ParkingBoy {
 Map<Long, ParkingLot> parkingLots
 SearchParkingLotRule rule

 Receipt parkCar(Car car)
 ParkingLot searchAvailableParkingLot()
}

class SearchParkingLotRule{
 ParkingLot search(List<ParkingLot> parkingLots)
}

class SearchByOrder{
}

class SearchByMaximumSlots{
}

class ParkingManager{
    List<ParkingBoy> parkingBoys

    void dispatchWork(Car car)
}

ParkingLot *-- Receipt

Receipt -> Car

ParkingBoy o-- ParkingLot

ParkingManager o-- ParkingBoy

ParkingBoy-> SearchParkingLotRule

SearchParkingLotRule <.. SearchByOrder
SearchParkingLotRule <.. SearchByMaximumSlots
@enduml